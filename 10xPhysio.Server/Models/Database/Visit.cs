using Supabase.Postgrest.Attributes;
using Supabase.Postgrest.Models;

namespace _10xPhysio.Server.Models.Database
{
    /// <summary>
    /// Represents the public.visits table containing therapy session notes and AI metadata.
    /// </summary>
    [Table("visits")]
    public class Visit : BaseModel
    {
        /// <summary>
        /// Unique identifier generated for each visit record.
        /// </summary>
        [PrimaryKey("id", false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Foreign key referencing the patient owning the visit.
        /// </summary>
        [Column("patient_id")]
        public Guid PatientId { get; set; }

        /// <summary>
        /// Scheduled visit date and time stored in UTC.
        /// </summary>
        [Column("visit_date")]
        public DateTimeOffset VisitDate { get; set; }

        /// <summary>
        /// Optional subjective interview notes captured during the visit.
        /// </summary>
        [Column("interview")]
        public string? Interview { get; set; }

        /// <summary>
        /// Optional objective description and findings for the visit.
        /// </summary>
        [Column("description")]
        public string? Description { get; set; }

        /// <summary>
        /// Optional treatment recommendations captured or revised for the visit.
        /// </summary>
        [Column("recommendations")]
        public string? Recommendations { get; set; }

        /// <summary>
        /// Flag indicating whether the recommendations were generated by AI tooling.
        /// </summary>
        [Column("recommendations_generated_by_ai")]
        public bool RecommendationsGeneratedByAi { get; set; }

        /// <summary>
        /// Timestamp of when the AI recommendations were produced when applicable.
        /// </summary>
        [Column("recommendations_generated_at")]
        public DateTimeOffset? RecommendationsGeneratedAt { get; set; }

        /// <summary>
        /// Timestamp of visit creation.
        /// </summary>
        [Column("created_at")]
        public DateTimeOffset CreatedAt { get; set; }

        /// <summary>
        /// Timestamp of the latest visit update maintained by triggers.
        /// </summary>
        [Column("updated_at")]
        public DateTimeOffset UpdatedAt { get; set; }
    }
}
